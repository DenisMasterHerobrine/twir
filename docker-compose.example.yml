version: "3.7"

services:
  adminer:
    image: adminer
    restart: always
    ports:
      - 54310:8080
    environment:
      - ADMINER_PLUGINS=enum-types

  postgres:
    restart: unless-stopped
    image: postgres:14-alpine
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: tsuwari
      POSTGRES_PASSWORD: tsuwari
      POSTGRES_DB: tsuwari

  backup:
    restart: unless-stopped
    image: satont/postgresql-backup-s3
    environment:
      POSTGRES_DATABASE: tsuwari
      POSTGRES_HOST: postgres
      POSTGRES_USER: tsuwari
      POSTGRES_PASSWORD: tsuwari
      S3_ACCESS_KEY_ID: example
      S3_SECRET_ACCESS_KEY: example
      S3_BUCKET: example
      S3_PREFIX: example
      SCHEDULE: example
      S3_REGION: example
      S3_ENDPOINT: example

  migrations:
    restart: unless-stopped
    image: satont/tsuwari:migrations
    env_file:
      - .env
    depends_on:
      - postgres

  redis:
    restart: unless-stopped
    image: redis:latest
    volumes:
      - ./redis-data:/data

  nats:
    restart: unless-stopped
    image: nats:latest

  api:
    restart: unless-stopped
    image: satont/tsuwari:api
    env_file:
      - .env
    deploy:
      mode: replicated
      replicas: 6
    ports:
      - 3002:3002
    depends_on:
      - migrations
      - redis

  bots:
    restart: unless-stopped
    image: satont/tsuwari:bots
    env_file:
      - .env
    depends_on:
      - migrations
      - redis

  scheduler:
    restart: unless-stopped
    image: satont/tsuwari:scheduler
    env_file:
      - .env
    depends_on:
      - migrations
      - redis

  streamstatus:
    restart: unless-stopped
    image: satont/tsuwari:streamstatus
    env_file:
      - .env
    depends_on:
      - migrations
      - redis
