version: "3.7"

services:
  adminer:
    image: adminer
    restart: always
    ports:
      - 54320:8080
    environment:
      - ADMINER_PLUGINS=enum-types
    networks:
      - tsuwari

  postgres:
    restart: unless-stopped
    image: postgres:14-alpine
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    #command: postgres -c 'max_connections=100000'
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
        - 5432:5432
    networks:
      - tsuwari


  backup:
    restart: unless-stopped
    image: satont/postgresql-backup-s3
    environment:
      POSTGRES_DATABASE: ${DB_NAME}
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      S3_BUCKET: ${S3_BUCKET}
      S3_PREFIX: ${S3_PREFIX}
      SCHEDULE: ${S3_SCHEDULE}
      S3_REGION: ${S3_REGION}
      S3_ENDPOINT: ${S3_ENDPOINT}
    networks:
      - tsuwari

  minio:
    image: quay.io/minio/minio
    command: server --address 0.0.0.0:9000 --console-address ":9001" /data
    volumes:
      - ./minio_data:/data
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
      MINIO_REGION_NAME: eu-east-1
      MINIO_SERVER_URL: https://minio.tsuwari.tk
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - tsuwari

  migrations:
    build:
      context: .
      dockerfile: libs/prisma/Dockerfile
    restart: "no"
    image: registry.satont.dev/tsuwari/migrations
    env_file:
      - .env
    depends_on:
      - postgres
    networks:
      - tsuwari

  redis:
    restart: unless-stopped
    image: redis/redis-stack:latest
    volumes:
      - ./redis-data:/data
    ports:
      - 6379:6379
    environment:
      REDIS_ARGS: --requirepass 95787673576294Aahidden
    networks:
      - tsuwari
    # command: redis-stack --requirepass 95787673576294Aahidden

  nats:
    restart: unless-stopped
    image: nats:latest
    networks:
      - tsuwari

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    restart: unless-stopped
    image: registry.satont.dev/tsuwari/api
    env_file:
      - .env
    deploy:
      mode: replicated
      replicas: 4
    ports:
      - "3004-3008:3002"
    depends_on:
      - redis
      - migrations
      - postgres
      - nats
    networks:
      - tsuwari

  bots:
    build:
      context: .
      dockerfile: apps/bots/Dockerfile
    restart: unless-stopped
    image: registry.satont.dev/tsuwari/bots
    env_file:
      - .env
    depends_on:
      - redis
      - migrations
      - postgres
      - nats
      - api
    networks:
      - tsuwari

  parser:
    build:
      context: .
      dockerfile: apps/parser/Dockerfile
    restart: unless-stopped
    image: registry.satont.dev/tsuwari/parser
    env_file:
      - .env
    deploy:
      mode: replicated
      replicas: 8
    depends_on:
      - redis
      - migrations
      - postgres
      - nats
      - bots
    networks:
      - tsuwari

  scheduler:
    build:
      context: .
      dockerfile: apps/scheduler/Dockerfile
    restart: unless-stopped
    image: registry.satont.dev/tsuwari/scheduler
    env_file:
      - .env
    depends_on:
      - redis
      - migrations
      - streamstatus
      - postgres
      - nats
    networks:
      - tsuwari

  streamstatus:
    build:
      context: .
      dockerfile: apps/streamstatus/Dockerfile
    restart: unless-stopped
    image: registry.satont.dev/tsuwari/streamstatus
    env_file:
      - .env
    depends_on:
      - redis
      - migrations
      - postgres
      - nats
    networks:
      - tsuwari

  eventsub:
    build:
      context: .
      dockerfile: apps/eventsub/Dockerfile
    restart: unless-stopped
    image: registry.satont.dev/tsuwari/eventsub
    env_file:
      - .env
    ports:
      - "3003:3003"
    depends_on:
      - redis
      - migrations
      - postgres
      - nats
    networks:
      - tsuwari

  dota:
    build:
      context: .
      dockerfile: apps/dota/Dockerfile
    restart: unless-stopped
    image: registry.satont.dev/tsuwari/dota
    env_file:
      - .env
    depends_on:
      - redis
      - migrations
      - postgres
      - nats
    networks:
      - tsuwari

networks:
  tsuwari:
    name: tsuwari