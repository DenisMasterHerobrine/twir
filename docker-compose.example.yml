version: "3.7"

services:
  adminer:
    image: adminer
    restart: always
    ports:
      - 54320:8080
    environment:
      - ADMINER_PLUGINS=enum-types

  postgres:
    restart: unless-stopped
    image: postgres:14-alpine
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    #command: postgres -c 'max_connections=100000'
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      #ports:
      #- 5432:5432


  backup:
    restart: unless-stopped
    image: satont/postgresql-backup-s3
    environment:
      POSTGRES_DATABASE: ${DB_NAME}
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      S3_BUCKET: ${S3_BUCKET}
      S3_PREFIX: ${S3_PREFIX}
      SCHEDULE: ${S3_SCHEDULE}
      S3_REGION: ${S3_REGION}
      S3_ENDPOINT: ${S3_ENDPOINT}

  minio:
    image: quay.io/minio/minio
    command: server --address 0.0.0.0:9000 --console-address ":9001" /data
    volumes:
      - ./minio_data:/data
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
      MINIO_REGION_NAME: eu-east-1
      MINIO_SERVER_URL: https://minio.tsuwari.tk
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  migrations:
    restart: "no"
    image: satont/tsuwari:migrations-ARM64
    env_file:
      - .env
    depends_on:
      - postgres

  redis:
    restart: unless-stopped
    image: redis:latest
    volumes:
      - ./redis-data:/data

  nats:
    restart: unless-stopped
    image: nats:latest

  api:
    restart: unless-stopped
    image: satont/tsuwari:api-ARM64
    env_file:
      - .env
    ports:
      - "3002:3002"
    depends_on:
      - redis
      - migrations
      - postgres
      - nats

  bots:
    restart: unless-stopped
    image: satont/tsuwari:bots-ARM64
    env_file:
      - .env
    depends_on:
      - redis
      - migrations
      - postgres
      - nats
      - api

  parser:
    restart: unless-stopped
    image: satont/tsuwari:parser-ARM64
    env_file:
      - .env
    deploy:
      mode: replicated
      replicas: 8
    depends_on:
      - redis
      - migrations
      - postgres
      - nats
      - bots

  scheduler:
    restart: unless-stopped
    image: satont/tsuwari:scheduler-ARM64
    env_file:
      - .env
    depends_on:
      - redis
      - migrations
      - streamstatus
      - postgres
      - nats

  streamstatus:
    restart: unless-stopped
    image: satont/tsuwari:streamstatus-ARM64
    env_file:
      - .env
    depends_on:
      - redis
      - migrations
      - postgres
      - nats

  eventsub:
    restart: unless-stopped
    image: satont/tsuwari:eventsub-ARM64
    env_file:
      - .env
    ports:
      - "3003:3003"
    depends_on:
      - redis
      - migrations
      - postgres
      - nats

  dota:
    restart: unless-stopped
    image: satont/tsuwari:dota-ARM64
    env_file:
      - .env
    depends_on:
      - redis
      - migrations
      - postgres
      - nats