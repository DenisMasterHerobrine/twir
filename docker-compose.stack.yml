version: "3.9"

services:
  adminer:
    image: adminer
    environment:
      - ADMINER_PLUGINS=enum-types
    networks:
      - tsuwari
      - traefik-public
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.twir-adminer.rule=Host(`adminer.twir.app`)
        - traefik.http.routers.twir-adminer.tls=true
        - traefik.http.routers.twir-adminer.tls.certresolver=le
        - traefik.http.routers.twir-adminer.middlewares=admin-auth
        - traefik.http.services.twir-adminer.loadbalancer.server.port=8080

  postgres:
    image: postgres:14-alpine
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./configs/postgres.conf:/etc/postgresql/postgresql.conf
    environment:
      POSTGRES_USER_FILE: /run/secrets/tsuwari_postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/tsuwari_postgres_password
      POSTGRES_DB_FILE: /run/secrets/tsuwari_postgres_db
    secrets:
      - tsuwari_postgres_user
      - tsuwari_postgres_password
      - tsuwari_postgres_db
    networks:
      - tsuwari
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.role == manager

  postgres-backup:
    build:
      context: .
      dockerfile: ./tools/pg-backup/Dockerfile
    image: registry.satont.ru/twir/postgres-backup
    secrets:
      - tsuwari_doppler_token
    networks:
      - tsuwari
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.role == manager

  migrations:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: migrations
    image: registry.satont.ru/twir/migrations
    secrets:
      - tsuwari_doppler_token
    networks:
      - tsuwari
    deploy:
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 30

  redis:
    image: redis/redis:latest
    volumes:
      - redis-data:/data
    networks:
      - tsuwari
    command: redis-server --save 60 1
    deploy:
      restart_policy:
        condition: any
        delay: 3s
        max_attempts: 30
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.role == manager

  api:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: api
    image: registry.satont.ru/twir/api
    secrets:
      - tsuwari_doppler_token
    networks:
      - tsuwari
      - traefik-public
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.twir-api.rule=(Host(`twir.app`) && PathPrefix(`/api`))
        - traefik.http.routers.twir-api.tls.certresolver=le
        - traefik.http.routers.twir-api.tls=true
        - traefik.http.services.twir-api.loadbalancer.server.port=3002
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr

  bots:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: bots
    image: registry.satont.ru/twir/bots
    secrets:
      - tsuwari_doppler_token
    networks:
      - tsuwari
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr

  watched:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: watched
    image: registry.satont.ru/twir/watched
    secrets:
      - tsuwari_doppler_token
    networks:
      - tsuwari
    deploy:
      update_config:
        parallelism: 4
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr
      mode: replicated
      replicas: 4

  parser:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: parser
    image: registry.satont.ru/twir/parser
    secrets:
      - tsuwari_doppler_token
    deploy:
      update_config:
        parallelism: 10
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      mode: replicated
      replicas: 5
      endpoint_mode: dnsrr
    networks:
      - tsuwari

  timers:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: timers
    image: registry.satont.ru/twir/timers
    secrets:
      - tsuwari_doppler_token
    networks:
      - tsuwari
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr

  scheduler:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: scheduler
    image: registry.satont.ru/twir/scheduler
    secrets:
      - tsuwari_doppler_token
    networks:
      - tsuwari
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr

  eventsub:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: eventsub
    image: registry.satont.ru/twir/eventsub
    secrets:
      - tsuwari_doppler_token
    networks:
      - tsuwari
      - traefik-public
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr
      labels:
        - traefik.enable=true
        - traefik.http.routers.twir-eventsub.rule=Host(`eventsub.twir.app`)
        - traefik.http.routers.twir-eventsub.tls=true
        - traefik.http.routers.twir-eventsub.tls.certresolver=le
        - traefik.http.services.twir-eventsub.loadbalancer.server.port=3003

  eval:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: eval
    image: registry.satont.ru/twir/eval
    secrets:
      - tsuwari_doppler_token
    deploy:
      update_config:
        parallelism: 10
      mode: replicated
      replicas: 5
      endpoint_mode: dnsrr
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
    networks:
      - tsuwari

  integrations:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: integrations
    image: registry.satont.ru/twir/integrations
    secrets:
      - tsuwari_doppler_token
    networks:
      - tsuwari
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr

  landing:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: landing
    image: registry.satont.ru/twir/landing
    secrets:
      - tsuwari_doppler_token
    networks:
      - tsuwari
      - traefik-public
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      mode: replicated
      replicas: 5
      endpoint_mode: dnsrr
    labels:
      - traefik.enable=true
      - traefik.http.routers.twir-landing.rule=Host(`twir.app`)
      - traefik.http.routers.twir-landing.tls=true
      - traefik.http.routers.twir-landing.tls.certresolver=le
      - traefik.http.services.twir-landing.loadbalancer.server.port=3000

  dashboard:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: dashboard
    image: registry.satont.ru/twir/dashboard
    secrets:
      - tsuwari_doppler_token
    ports:
      - target: 80
        published: 3002
        mode: host
    networks:
      - tsuwari
      - traefik-public
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr
    labels:
      - traefik.enable=true
      - traefik.http.routers.twir-dashboard.rule=(Host(`twir.app`) && PathPrefix(`/dashboard`))
      - traefik.http.routers.twir-dashboard.tls=true
      - traefik.http.routers.twir-dashboard.tls.certresolver=le
      - traefik.http.services.twir-dashboard.loadbalancer.server.port=3000

  public:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: public
    image: registry.satont.ru/twir/public
    secrets:
      - tsuwari_doppler_token
    networks:
      - tsuwari
      - traefik-public
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr
      labels:
        - traefik.enable=true
        - traefik.http.routers.twir-public.rule=(Host(`twir.app`) && PathPrefix(`/p`))
        - traefik.http.routers.twir-public.tls=true
        - traefik.http.routers.twir-public.tls.certresolver=le
        - traefik.http.services.twir-public.loadbalancer.server.port=3006

  overlays:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: overlays
    image: registry.satont.ru/twir/overlays
    networks:
      - tsuwari
      - traefik-public
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr
      labels:
        - traefik.enable=true
        - traefik.http.routers.twir-overlays.rule=(Host(`twir.app`) && PathPrefix(`/overlays`))
        - traefik.http.routers.twir-overlays.tls=true
        - traefik.http.routers.twir-overlays.tls.certresolver=le
        - traefik.http.services.twir-overlays.loadbalancer.server.port=3007

  websockets:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: websockets
    image: registry.satont.ru/twir/websockets
    secrets:
      - tsuwari_doppler_token
    networks:
      - tsuwari
      - traefik-public
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr
      labels:
        - traefik.enable=true
        - traefik.http.routers.twir-websockets.rule=(Host(`twir.app`) && PathPrefix(`/socket`))
        - traefik.http.routers.twir-websockets.tls=true
        - traefik.http.routers.twir-websockets.tls.certresolver=le
        - traefik.http.services.twir-websockets.loadbalancer.server.port=3004

  tokens:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: tokens
    image: registry.satont.ru/twir/tokens
    secrets:
      - tsuwari_doppler_token
    networks:
      - tsuwari
    deploy:
      update_config:
        parallelism: 5
      mode: replicated
      replicas: 2
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr

  emotes-cacher:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: emotes-cacher
    image: registry.satont.ru/twir/emotes-cacher
    secrets:
      - tsuwari_doppler_token
    networks:
      - tsuwari
    deploy:
      update_config:
        parallelism: 5
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr
      mode: replicated
      replicas: 5

  events:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: events
    image: registry.satont.ru/twir/events
    secrets:
      - tsuwari_doppler_token
    networks:
      - tsuwari
    deploy:
      update_config:
        parallelism: 5
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr
      mode: replicated
      replicas: 5

  ytsr:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: ytsr
    image: registry.satont.ru/twir/ytsr
    secrets:
      - tsuwari_doppler_token
    networks:
      - tsuwari
    deploy:
      update_config:
        parallelism: 5
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr
      mode: replicated
      replicas: 5

  tts:
    image: aculeasis/rhvoice-rest:amd64
    networks:
      - tsuwari
    deploy:
      update_config:
        parallelism: 2
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 30
      endpoint_mode: dnsrr
      mode: replicated
      replicas: 2


volumes:
  postgres-data:
  redis-data:
  minio-data:


networks:
  tsuwari:
    name: tsuwari
    external: true
  traefik-public:
    external: true

secrets:
  tsuwari_doppler_token:
    external: true
  tsuwari_postgres_user:
    external: true
  tsuwari_postgres_db:
    external: true
  tsuwari_postgres_password:
    external: true
