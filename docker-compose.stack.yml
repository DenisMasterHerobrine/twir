version: "3.9"

services:
  postgres:
    restart: unless-stopped
    image: postgres:14-alpine
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      DOPPLER_TOKEN: /run/secrets/doppler_token
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    secrets:
      - doppler_token
    networks:
      - tsuwari
    deploy:
      restart_policy:
        condition: any
        delay: 3s
        max_attempts: 5
      placement:
        constraints:
          - node.role == manager

  backup:
    restart: unless-stopped
    image: satont/postgresql-backup-s3
    environment:
      DOPPLER_TOKEN: /run/secrets/doppler_token
      POSTGRES_DATABASE: ${DB_NAME}
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      S3_BUCKET: ${S3_BUCKET}
      S3_PREFIX: ${S3_PREFIX}
      SCHEDULE: ${S3_SCHEDULE}
      S3_REGION: ${S3_REGION}
      S3_ENDPOINT: ${S3_ENDPOINT}
    secrets:
      - doppler_token
    networks:
      - tsuwari
    deploy:
      restart_policy:
        condition: any
        delay: 3s
        max_attempts: 5

  minio:
    image: quay.io/minio/minio
    command: server --address 0.0.0.0:9000 --console-address ":9001" /data
    volumes:
      - minio-data:/data
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      DOPPLER_TOKEN: /run/secrets/doppler_token
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
      MINIO_REGION_NAME: eu-east-1
      MINIO_SERVER_URL: https://minio.tsuwari.app
    secrets:
      - doppler_token
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:9000/minio/health/live"
        ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - tsuwari
    deploy:
      restart_policy:
        condition: any
        delay: 3s
        max_attempts: 5

  migrations:
    image: registry.satont.dev/tsuwari/migrations
    environment:
      DOPPLER_TOKEN: /run/secrets/doppler_token
    secrets:
      - doppler_token
    networks:
      - tsuwari
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 5

  redis:
    restart: unless-stopped
    image: redis/redis-stack:latest
    volumes:
      - redis-data:/data
    ports:
      - 6379:6379
    environment:
      DOPPLER_TOKEN: /run/secrets/doppler_token
      REDIS_ARGS: --requirepass ${DB_PASSWORD}
    secrets:
      - doppler_token
    networks:
      - tsuwari
    deploy:
      restart_policy:
        condition: any
        delay: 3s
        max_attempts: 5
      placement:
        constraints:
          - node.role == manager

  nats:
    restart: unless-stopped
    image: nats:latest
    environment:
      DOPPLER_TOKEN: /run/secrets/doppler_token
    secrets:
      - doppler_token
    networks:
      - tsuwari
    deploy:
      restart_policy:
        condition: any
        delay: 3s
        max_attempts: 5

  api:
    restart: unless-stopped
    image: registry.satont.dev/tsuwari/api
    environment:
      DOPPLER_TOKEN: /run/secrets/doppler_token
    secrets:
      - doppler_token
    ports:
      - "3004-3008:3002"
    networks:
      - tsuwari
    deploy:
      restart_policy:
        condition: any
        delay: 3s
        max_attempts: 5
      mode: replicated
      replicas: 4
      placement:
        constraints:
          - node.role == manager

  bots:
    restart: unless-stopped
    image: registry.satont.dev/tsuwari/bots
    environment:
      DOPPLER_TOKEN: /run/secrets/doppler_token
    secrets:
      - doppler_token
    networks:
      - tsuwari
    deploy:
      restart_policy:
        condition: any
        delay: 3s
        max_attempts: 5

  watched:
    restart: unless-stopped
    image: registry.satont.dev/tsuwari/watched
    environment:
      DOPPLER_TOKEN: /run/secrets/doppler_token
    secrets:
      - doppler_token
    networks:
      - tsuwari
    deploy:
      restart_policy:
        condition: any
        delay: 3s
        max_attempts: 5
      mode: replicated
      replicas: 8

  parser:
    restart: unless-stopped
    image: registry.satont.dev/tsuwari/parser
    environment:
      DOPPLER_TOKEN: /run/secrets/doppler_token
    secrets:
      - doppler_token
    deploy:
      restart_policy:
        condition: any
        delay: 3s
        max_attempts: 5
      mode: replicated
      replicas: 16
    networks:
      - tsuwari

  timers:
    restart: unless-stopped
    image: registry.satont.dev/tsuwari/timers
    environment:
      DOPPLER_TOKEN: /run/secrets/doppler_token
    secrets:
      - doppler_token
    networks:
      - tsuwari
    deploy:
      restart_policy:
        condition: any
        delay: 3s
        max_attempts: 5

  scheduler:
    restart: unless-stopped
    image: registry.satont.dev/tsuwari/scheduler
    environment:
      DOPPLER_TOKEN: /run/secrets/doppler_token
    secrets:
      - doppler_token
    networks:
      - tsuwari
    deploy:
      restart_policy:
        condition: any
        delay: 3s
        max_attempts: 5

  streamstatus:
    restart: unless-stopped
    image: registry.satont.dev/tsuwari/streamstatus
    environment:
      DOPPLER_TOKEN: /run/secrets/doppler_token
    secrets:
      - doppler_token
    networks:
      - tsuwari
    deploy:
      restart_policy:
        condition: any
        delay: 3s
        max_attempts: 5

  eventsub:
    restart: unless-stopped
    image: registry.satont.dev/tsuwari/eventsub
    environment:
      DOPPLER_TOKEN: /run/secrets/doppler_token
    secrets:
      - doppler_token
    ports:
      - "3003:3003"
    networks:
      - tsuwari
    deploy:
      restart_policy:
        condition: any
        delay: 3s
        max_attempts: 5
      placement:
        constraints:
          - node.role == manager

  dota:
    restart: unless-stopped
    image: registry.satont.dev/tsuwari/dota
    environment:
      DOPPLER_TOKEN: /run/secrets/doppler_token
    secrets:
      - doppler_token
    networks:
      - tsuwari
    deploy:
      restart_policy:
        condition: any
        delay: 3s
        max_attempts: 5

  eval:
    restart: unless-stopped
    image: registry.satont.dev/tsuwari/eval
    environment:
      DOPPLER_TOKEN: /run/secrets/doppler_token
    secrets:
      - doppler_token
    deploy:
      mode: replicated
      replicas: 16
      restart_policy:
        condition: any
        delay: 3s
        max_attempts: 5
    networks:
      - tsuwari

  integrations:
    restart: unless-stopped
    image: registry.satont.dev/tsuwari/dota
    environment:
      DOPPLER_TOKEN: /run/secrets/doppler_token
    secrets:
      - doppler_token
    networks:
      - tsuwari
    deploy:
      restart_policy:
        condition: any
        delay: 3s
        max_attempts: 5

  web:
    restart: unless-stopped
    image: registry.satont.dev/tsuwari/web
    environment:
      DOPPLER_TOKEN: /run/secrets/doppler_token
    secrets:
      - doppler_token
    ports:
      - 3001:3000
    networks:
      - tsuwari
    deploy:
      restart_policy:
        condition: any
        delay: 3s
        max_attempts: 5
      placement:
        constraints:
          - node.role == manager

  dashboard:
    restart: unless-stopped
    image: registry.satont.dev/tsuwari/dashboard
    environment:
      DOPPLER_TOKEN: /run/secrets/doppler_token
    secrets:
      - doppler_token
    ports:
      - 3002:8080
    networks:
      - tsuwari
    deploy:
      restart_policy:
        condition: any
        delay: 3s
        max_attempts: 5
      placement:
        constraints:
          - node.role == manager

volumes:
  postgres-data:
  redis-data:
  minio-data:


networks:
  tsuwari:
    name: tsuwari
    driver: overlay
    attachable: true

secrets:
  doppler_token:
    external: true
