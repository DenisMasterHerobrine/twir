version: '3.9'

networks:
  monitor-net:
    driver: bridge
  tsuwari:
    name: tsuwari
    external: true
  traefik-public:
    external: true

volumes:
  tsuwari-prometheus-data: { }
  tsuwari-grafana-data: { }

services:
  prometheus:
    image: prom/prometheus:v2.40.1
    volumes:
      - ./dockprom/prometheus:/etc/prometheus
      - tsuwari-prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - monitor-net
      - tsuwari
      - traefik-public
    deploy:
      labels:
        - org.label-schema.group=monitoring
        - traefik.enable=true
        - traefik.http.routers.twir-prometheus.rule=Host(`prometheus.twir.app`)
        - traefik.http.routers.twir-prometheus.middlewares=admin-auth
        - traefik.http.services.twir-prometheus.loadbalancer.server.port=9090
        - traefik.docker.network=traefik-public
      placement:
        constraints:
          - node.role == manager

  alertmanager:
    image: prom/alertmanager:v0.24.0
    volumes:
      - ./dockprom/alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    networks:
      - monitor-net
      - tsuwari
      - traefik-public
    deploy:
      labels:
        - org.label-schema.group=monitoring
        - traefik.enable=true
        - traefik.http.routers.twir-alertmanager.rule=Host(`alertmanager.twir.app`)
        - traefik.http.routers.twir-alertmanager.middlewares=admin-auth
        - traefik.http.services.twir-alertmanager.loadbalancer.server.port=9093
        - traefik.docker.network=traefik-public
      placement:
        constraints:
          - node.role == manager

  nodeexporter:
    image: prom/node-exporter:v1.4.0
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    networks:
      - monitor-net
      - tsuwari
      - traefik-public
    deploy:
      labels:
        - org.label-schema.group=monitoring

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.46.0
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    restart: unless-stopped
    networks:
      - monitor-net
      - tsuwari
      - traefik-public
    deploy:
      labels:
        - org.label-schema.group=monitoring
        - traefik.enable=true
        - traefik.http.routers.twir-cadvisor.rule=Host(`cadvisor.twir.app`)
        - traefik.http.routers.twir-cadvisor.middlewares=admin-auth
        - traefik.http.services.twir-cadvisor.loadbalancer.server.port=8080
        - traefik.docker.network=traefik-public
      placement:
        constraints:
          - node.role == manager

  grafana:
    image: grafana/grafana:9.2.4
    volumes:
      - tsuwari-grafana-data:/var/lib/grafana
      - ./dockprom/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./dockprom/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    restart: unless-stopped
    expose:
      - 3000
    networks:
      - monitor-net
      - tsuwari
      - traefik-public
    deploy:
      labels:
        - org.label-schema.group=monitoring
        - traefik.enable=true
        - traefik.http.routers.twir-grafana.rule=Host(`grafana.twir.app`)
        - traefik.http.routers.twir-grafana.middlewares=admin-auth
        - traefik.http.services.twir-grafana.loadbalancer.server.port=3000
        - traefik.docker.network=traefik-public
      placement:
        constraints:
          - node.role == manager
